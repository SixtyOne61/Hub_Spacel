TO DO

Stabilization :
-Respawn du vaisseau
-Hit bullet
-Destruction du vaisseau
-Scale de la target
-pawn location

Gameplay :
Faire le full gameplay de chaque level 1
Attack augmentation du fire rate 33%
Support augmentation de la vitesse 33%, impacter la destruction des moteurs sur la vitesse du vaisseau
Protection juste faire la couche en plus 33%
Systeme de réparation 


REFAIRE XML des location informations pour les parties des vaisseaux !

Make tuto for use aws for dedicated server : https://www.youtube.com/watch?v=QHB1H6eM-vc
Make tuto for create a server queue system : https://www.youtube.com/watch?v=u2Si2y2hviA

Tuto long mais qui gére tout ce qu'on voudrait faire en multi : https://www.youtube.com/watch?v=tOy0xYaP3wA

Interface du jeu - Main menu; avec "My story" qui est une timeline, join server qui sera fait, 
création du vaisseau par défaut.
Remplissage des équipes automatique
Arriver sur un server, interface avec visionnage de son équipe, changement de son vaisseau
Après 30s, démarrage d'une partie
Durée d'une partie de 11 min 30
Ecran de fin
Retour au main menu

Pour choisir les spec de son vaisseau, on a 4pts à répartir dans trois branches de trois éléments.
Cadence de tir + 33% / X / Missile tête cherceuse (triangle) + tour d'attaque
Coque doublé / Bouclier perso / Bouclier sur allier (triangle) + tour de défense
Vitesse + 33% / X / IEM (triangle) + tour parasite
Une tour se creer en utilisant une partie des ressources que l'on a ramassé

Map race avec vaisseau identique et raccourci

Rules pour le matchmaking avec plusieurs équipes

Backlog :
shield gameplay / self shield
smart rocket gameplay / ray gun
iem gameplay (fx carré de perte de controle, la couleur du carré est celle de l'équipe) / furtivité
define rules for create ship module
give life gameplay / repair gameplay
collecte ressource / create ressource on map
map limitation cube / fx
volumetric cloud : https://www.youtube.com/watch?v=McBiRCSWM9Q




Create module xml :
FXmlFile file;
file.LoadFile("<root>\n</root>", EConstructMethod::ConstructFromBuffer);

// root node
FXmlNode * node = file.GetRootNode();
FString content = "\n";
content += "<Size val=\"" + cubeSize.ToString() + "\"/>\n";

content.Append("<Location val=\"" + loc.ToString() + "\"/>\n");

node->AppendChildNode("Mod", content);
FString path = FPaths::ProjectDir() + "Content/Xml/Module/" + _module->Name.ToString() + ".xml";
file.Save(path);
	
		